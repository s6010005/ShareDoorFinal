@model shareDoor.ViewModels.AdFormViewModel
@{
    ViewBag.Title = "AdForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm(Model.FormAction, "Ads", FormMethod.Post, new { enctype = "multipart/form-data", id = "insertAd" }))
{
    <div class="container" style="">
        <h2>@Model.Action</h2>
        <div class="alert alert-success p-0" role="alert" >Tα πεδία με <span style="font-size: 18px;">*</span> είναι <strong>υποχρεωτικά.</strong> </div>
        <button class="btn btn-primary" type="submit" id="submitButton">@Model.ButtonAction</button>
        <hr />
        @Html.AntiForgeryToken()
        @if (Model.FormAction == "UpdateAd")
        {
            @Html.TextBoxFor(m => m.House.Id, new { style = "display: none;" })
        }
        <div class="row">
            <div class="col-3 justify-content-center col-lg-3">
                <div class="form-group">

                    @Html.LabelFor(m => m.House.StateId)
                    @Html.DropDownListFor(m => m.House.StateId, new SelectList(Model.States, "Id", "Name"), "", new { @class = "form-control get-states" })
                    @Html.ValidationMessageFor(m => m.House.StateId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.AreaId)
                    @Html.DropDownListFor(m => m.House.AreaId, new SelectList(Model.Areas, "Id", "Name"), "", new { @class = "form-control get-areas" })
                    @Html.ValidationMessageFor(m => m.House.AreaId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Address)
                    @Html.TextBoxFor(m => m.House.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.Address)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.PostalCode)
                    @Html.TextBoxFor(m => m.House.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.PostalCode)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Level)
                    @Html.EnumDropDownListFor(m => m.House.Level, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.Level)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.YearConstruct)
                    @Html.TextBoxFor(m => m.House.YearConstruct, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.YearConstruct)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.TotalRooms)
                    @Html.EnumDropDownListFor(m => m.House.TotalRooms, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.House.TotalRooms)
                </div>

            </div>
            <div class="col-5 justify-content-center col-lg-5">           
                <div class="form-group">
                    @Html.LabelFor(m => m.House.RentCost)
                    @Html.TextBoxFor(m => m.House.RentCost, new { @class = "form-control", type = "number" })
                    @Html.ValidationMessageFor(m => m.House.RentCost)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.SquareMeters)
                    @Html.TextBoxFor(m => m.House.SquareMeters, new { @class = "form-control", type = "number", min = "0", max = "200" })
                    @Html.ValidationMessageFor(m => m.House.SquareMeters)
                </div>
                <div class="row">
                    <div class="col-5" style="        border-right: 1px solid black;">
                        <div class="form-group">
                            @Html.LabelFor(m => m.User.Smoker, "Είμαι Καπνιστής/ρια")
                            <div class="custom-radio">
                                <i class="fas fa-smoking"></i>
                                @Html.RadioButtonFor(m => m.User.Smoker, "Yes", new { @class = "" })
                                <i class="fas fa-ban ml-2 text-danger"></i>
                                @Html.RadioButtonFor(m => m.User.Smoker, "No", new { @class = "" })

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.User.Pets, "Έχω Κατοικίδιο/α")
                            <div class="custom-radio">

                                <i class="fas fa-paw"></i>
                                @Html.RadioButtonFor(m => m.User.Pets, "Yes", new { @class = "" })
                                <i class="fas fa-ban ml-2 text-danger"></i>
                                @Html.RadioButtonFor(m => m.User.Pets, "No", new { @class = "" })

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.User.Gender, "Είμαι")
                            <div class="custom-radio">
                                <i class="fas fa-male"></i>
                                @Html.RadioButtonFor(m => m.User.Gender, "Male", new { @class = "" })
                                <i class="fas fa-female ml-2"></i>
                                @Html.RadioButtonFor(m => m.User.Gender, "Female", new { @class = "" })
                                <i class="fas fa-question text-muted ml-2"></i>
                                @Html.RadioButtonFor(m => m.User.Gender, "Other", new { @class = "" })
                                @Html.ValidationMessageFor(m => m.User.Gender)
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.House.Smoker, "Αναζητώ Καπνιστή/ρια")
                            <div class="custom-radio">
                                <i class="fas fa-smoking "></i>
                                @Html.RadioButtonFor(m => m.House.Smoker, "Yes", new { @class = "" })
                                <i class="fas fa-ban ml-2 text-danger"></i>
                                @Html.RadioButtonFor(m => m.House.Smoker, "No", new { @class = "" })
                                <i class="fas fa-question ml-2 text-muted"></i>
                                @Html.RadioButtonFor(m => m.House.Smoker, "Default", new { @class = "", @checked = "" })
                                @Html.ValidationMessageFor(m => m.House.Smoker)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.House.Pets, "Επιτρέπονται Κατοικίδιο/α")
                            <div class="custom-radio">

                                <i class="fas fa-paw"></i>
                                @Html.RadioButtonFor(m => m.House.Pets, "Yes", new { @class = "" })
                                <i class="fas fa-ban ml-2 text-danger"></i>
                                @Html.RadioButtonFor(m => m.House.Pets, "No", new { @class = "" })
                                <i class="fas fa-question ml-2 text-muted"></i>
                                @Html.RadioButtonFor(m => m.House.Pets, "Default", new { @class = "", @checked = "" })
                                @Html.ValidationMessageFor(m => m.House.Pets)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.House.Gender, "Επιθυμητό φύλο")
                            <div class="custom-radio">
                                <i class="fas fa-male"></i>
                                @Html.RadioButtonFor(m => m.House.Gender, "Male", new { @class = "" })
                                <i class="fas fa-female ml-2"></i>
                                @Html.RadioButtonFor(m => m.House.Gender, "Female", new { @class = "" })
                                <i class="fas fa-question text-muted ml-2"></i>
                                @Html.RadioButtonFor(m => m.House.Gender, "Other", new { @class = "", @checked = "" })
                                @Html.ValidationMessageFor(m => m.House.Gender)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.House.Description)
                    @Html.TextAreaFor(m => m.House.Description, new { @class = "form-control", rows = "6", cols = "50" })
                    @Html.ValidationMessageFor(m => m.House.Description)
                </div>
                @Html.LabelFor(m => m.Files, "Φωτογραφίες")
                @Html.TextBoxFor(m => m.Files, new { type = "file", @multiple = "multiple" })

            </div>

            @if (Model.Action == "Επεξεργασία Αγγελίας" && Model.House.HousePhotos.Count > 0)
            {<div class="col-4 col-lg-4 justify-content-center" style="max-height: 550px;
                overflow-y: scroll;">

                    @foreach (var file in Model.House.HousePhotos)
                    {
                        <div class="text-center" id="@file.Id">


                            <img src="@file.Url" class="img-fluid p-2" />
                            <button class="btn btn-outline-primary mainButton" type="button" data-photo-id="@file.Id">Βασική</button>
                            <button class="btn btn-outline-danger deleteButton" type="button" data-photo-id="@file.Id">Διαγραφή</button>
                            <hr />
                        </div>
                    }

                </div>
            }
            else if (Model.Action == "Επεξεργασία Αγγελίας")
            {
                <h3>Δεν υπάρχουν Φωτογραφίες</h3>
            }
            else
            {
                <div class="col-4 col-lg-4 position-relative">
                    <img src="~/Images/newCouple.jpg" class="img-fluid position-absolute" style="        top: 0" />
                </div>

            }
        </div>


    </div>



}
@section scripts {
    <script>
        $(document).ready(function () {
            $(".get-states").change(function (e) {
                var Id = $(e.target).val()

                $.ajax({
                    url: "/api/ads/" + Id,
                })
                    .done(function (res) {
                        console.log(res);
                        $(".get-areas").empty();
                        for (var i = 0; i < res.length; i++) {
                            $(".get-areas").append(`<option value='${res[i].Id}'>` + res[i].Name + "</option>");
                        }
                    })
                    .fail(function () {

                    })
            })

            $(document).on("click", ".mainButton", function () {
                var temp = $(this).attr("data-photo-id");

                $.post("/api/HousePhotos", { photoId: temp })
                    .done(function () {
                        swal({
                            icon: "success",
                            text: "Η φωτογραφία έγινε η βασική της αγγελίας σου!",
                        });

                    })
                    .fail(function () {
                        alert("Υπήρξε κάποιο πρόβλημα. Δοκίμασε Πάλι σε λίγο.");
                    });
            });

            $(document).on("click", ".deleteButton", function () {
                var temp = $(this).attr("data-photo-id");
                var div = $(`#${temp}`);

                swal({
                    title: "Είσαι σίγουρος/η;",
                    text: "Αν την διαγράψεις, δεν είναι εφικτό να την επανακτήσεις!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((isConfirm) => {
                        if (isConfirm) {
                            $.ajax({
                                method: 'DELETE',
                                url: "/api/housephotos/" + temp
                            })
                                .done(function (res) {

                                    swal({
                                        icon: "success",
                                        text: "Η φωτογραφία διαγράφτηκε!",
                                    });
                                    div.hide('slow', function () {
                                        div.remove();
                                    })

                                })
                                .fail(function () {
                                    swal({
                                        icon: "error",
                                        text: "Δεν μπορείς να σβήσεις την βασική φωτογραφία της αγγελίας σου!",
                                    });
                                });

                        } else {
                            swal("Η φωτογραφία σου δεν επηρεάστηκε.");
                        }
                    });


            });




        });

    </script>
}

@section styles{
    <style>
        .form-group > label {
            font-weight: bold;
        }

        .swal-button {
            background-color: #073a37;
            border-color: none;
        }

            .swal-button:not([disabled]):hover {
                background-color: #05433f;
                border-color: none;
                color: yellow;
            }

        i {
            font-size: 18px;
        }

        .fa-male {
            color: blue;
        }

        .fa-female {
            color: #f53ebe;
        }
    </style>
}